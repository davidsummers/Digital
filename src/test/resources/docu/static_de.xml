<?xml version="1.0" encoding="UTF-8" ?>
<root>
    <chapter name="Digital">
        <subchapter name="Einführung">
            <par>
                Digital ist ein Simulator für digitale Schaltkreise. Die einzelnen Gatter eines Schaltkreise können
                miteinander durch Leitungen verbunden werden und das Verhalten der Gesamtschaltung wird simuliert.
                Der Anwender kann mit der laufenden Simulation über bestimmte Elemente interagieren, indem z.B. Knöpfe
                betätigt oder Eingänge gesetzt werden.
            </par>
            <par>
                Auf diese Weise können die meisten Grundschaltungen der Digitaltechnik aufgebaut werden. Im Ordner
                <e>examples</e>
                finden sich viele Beispiele bis hin zum funktionsfähigen 16-Bit Single Cycle Harvard Prozessor.
            </par>
            <par>
                Der Simulator kennt dabei zwei Modi: Im Bearbeitungsmodus kann die Schaltung bearbeitet werden. Es
                können Elemente hinzugefügt oder durch Leitungen verbunden werden. In diesem Modus ist die eigentliche
                Simulation nicht aktiv.
                Der Simulationsmodus wird durch <e>Start</e> aktiviert. Beim Wechsel in diesen Modus wird die Schaltung
                auf Konsistenz überprüft. Gibt es in der Schaltung noch Fehler, wird eine entsprechende Meldung
                angezeigt.
                Wenn möglich werden die betroffenen Elemente bzw. Leitungen hervorgehoben. Enthält die Schaltung keine
                Fehler mehr, wird die Simulation aktiviert. Jetzt kann mit der laufenden Simulation interagiert werden.
                Die Bearbeitung der Elemente ist dann jedoch nicht mehr möglich. Dazu muss erneut in den
                Bearbeitungsmodus gewechselt werden, indem die Simulation gestoppt wird.
            </par>
        </subchapter>
        <subchapter name="Verbindungsleitungen">
            <par>
                Alle Elemente müssen über Leitungen verbunden werden. Es ist nicht möglich, zwei Elemente direkt
                miteinander zu verbinden, indem man sie direkt nebeneinander platziert.
            </par>
            <par>
                Zudem gibt es nur Verbindungen zwischen einem Leitungsende und einem Bauteil. Wird ein Bauteil mitten
                auf eine Leitung gesetzt, wird keine Verbindung zwischen dem Bauteil und der Leitung hergestellt.
                Daher muss an jedem Bauteileanschluss, welcher mit einem anderen Verbunden werden soll, eine Leitung
                tatsächlich enden bzw. beginnen.
                Selbst wenn das Tunnel-Element verwendet wird, muss es eine Leitung zwischen dem Pin und dem
                Tunnel-Element geben.
            </par>
            <par>
                Soll ein Element incl. der angeschlossenen Verbindungsleitungen verschoben werden, kann das Element mit
                der Rechteckauswahl ausgewählt werden. Danach kann es mit der Maus verschoben werden. Wenn ein Element
                per Mausklick selektiert wird, wird nur das Bauteil allein - also ohne die angeschlossenen Leitungen
                mitzunehmen - verschoben.
            </par>
        </subchapter>
        <subchapter name="Hierarchisches Design">
            <par>
                Wenn eine sehr komplexe Schaltung aufgebaut wird, kann diese sehr schnell sehr unübersichtlich werden.
                Um hier die Übersicht zu behalten, können die verschiedenen Teile einer Schaltung in unterschiedlichen
                Dateien gespeichert werden. Dieser Mechanismuss erlaubt es auch, eine einmal erstellte Teilschaltung
                mehrfach in einer weiteren Schaltung zu verwenden. Dieses Vorgehen bietet zudem den Vorteil, dass die
                Dateien unabhängig von einander in einem Versionskontrollsystem abgelegt und Änderungen verfolgt werden
                können.
            </par>
            <par>
                Dabei werden in einer Schaltung nur die Dateinamen der Teilschaltungen gespeichert. Die entsprechenden
                Dateien der eingebundenen Teilschaltungen müssen daher zur Laufzeit der Simulation im Dateisystem
                gefunden
                werden. Um die verschiedenen Arbeitsweisen der Nutzer bestmöglich zu unterstützen und dennoch
                auf eine komplexe Verwaltung von Importpfaden usw. zu verzichten, ist eine etwas ungewöhnliche
                Import-Strategie implementiert.
            </par>
            <par>
                In einer Schaltung sind nur die Dateinamen der eingebetteten Schaltungen gespeichert. Soll die Datei
                geöffnet werden,
                werden alle Unterordner nach einer Datei des entsprechenden Namens durchsucht. Wird
                eine passende Datei gefunden, wird diese importiert. Dabei kommt es nur auf den Dateinamen der
                einzulesenden
                Datei an, nicht auf dessen Pfad. Entsprechend wird eine Fehlermeldung erzeugt, wenn sich in
                verschiedenen
                Unterordnern mehrere Dateien gleichen Namens befinden, da dann Mehrdeutigkeiten entstehen.
            </par>
            <par>
                Eine geeignete Projektstruktur sieht daher wie folgt aus: In einem eigenen Ordner befindet sich die
                Wurzelschaltung. Alle importierten Schaltungen müssen sich im selben Ordner oder in Unterordnern
                befinden.
                Alle Schaltungen müssen unterschiedliche Namen haben, es darf also nicht vorkommen, dass sich in
                verschiedenen Ordnern Schaltungen gleichen Namens befinden.
            </par>
        </subchapter>
    </chapter>
    <chapter name="Simulation">
        <subchapter name="Gatterlaufzeiten">
            <par>
                Bei der Simulation wird davon ausgegangen, dass jedes Gatter eine endliche Laufzeit hat, und dass diese
                Laufzeit
                für alle Gatter identisch ist. Die Laufzeit eines jeden Elementes aus der Bibliothek hat genau diese
                Laufzeit,
                unabhängig von dessen Komplexität. Ein Und-Gatter hat also die selbe Signalverzögerung wie ein
                RAM-Baustein.
                Ausgenommen davon sind die Dioden, der Leitungssplitter für die Erzeugung von Datenbussen und der
                Schalter.
                Diese Elemente haben keine Gatterlaufzeit bzw. diese beträgt Null.
            </par>
            <par>
                Wird eine Schaltung in eine andere Schaltung eingebettet, um ein hierarchisches Design zu erstellen,
                behalten die
                eingebetteten Schaltungen ihre Laufzeiten. Wird also ein komplexes Schaltnetz eingebettet bei welchem
                ein
                Signal
                von einem Eingang bis zu einem Ausgang drei Gatter passiern muss, beträgt dessen Laufzeit auch als
                eingebettete
                Schaltung drei Gatterlaufzeiten. Es gibt keine zusätzlichen Verzögerungen durch
                das Einbetten einer Schaltung. Sind nicht alle Ausgangssignale einer eingebetteten Schaltung gleich
                schnell,
                werden sich die Signale in der einbettenden Schaltung ebenso verhalten.
                Generell verändert das Einbetten einer Schaltung in eine andere dessen Laufzeitverhalten nicht. Die
                Schaltung
                verhält sich exakt so, als befänden sich alle Elemente auf der selben Ebene.
            </par>
        </subchapter>
    </chapter>
    <chapter name="Schaltungsanalyse und Synthese">
        <par>
            Eine vorliegende Schaltung kann über den Menüeintrag <e>Analyse</e> analysiert werden. Bei rein
            kombinatorischen Schaltungen wird eine Wahrheitstabelle erzeugt. Diese Wahrheitstabelle kann beliebig
            bearbeitet werden.
            Aus dieser Wahrheitstabelle lässt sich nach einer Bearbeitung eine neue Schaltung erzeugen.
        </par>
        <par>
            Neben rein kombinatorischen Schaltungen lassen sich auch Schaltwerke analysieren bzw. erzeugen. Anstelle
            einer
            einfachen Wahrheitstabelle entsteht eine so gen. Zustandsfolgetabelle. Jedes Flipflop taucht dabei auf der
            Eingangsseite und der Ausgangsseite der Zustandsfolgetabelle auf. In dieser Tabelle findet sich auf der
            rechten Seite der abhängigen Signale der Folgezustand, der nach dem nächsten Taktsignal eintreten wird,
            abhängig vom aktuellen Zustand der Flipflops. Damit eine Analyse möglich ist, müssen die Flipflops benannt
            werden.
        </par>
        <par>
            Dabei gilt folgende Namenskonvention: Der Folgezustand eines Bits auf der rechten Seite der Tabelle wird
            durch ein angehängtes kleines 'n+1' gekennzeichnet. Der dazu gehörige aktuelle Zustand wird durch ein
            angehängtes 'n' ausgezeichnet. Gibt es also eine Zustandsvariable 'A', dann kennzeichnet 'An' den aktuellen
            Zustand und 'An+1' den Folgezustand. Finden sich in der Wahrheitstabelle auf der linken und rechten Seite
            Signale,
            die diesem Muster entsprechen, wird davon ausgegangen, dass es sich um eine Zustandsfolgetabelle handelt und
            bei der Synthese wird entsprechend ein Schaltwerk anstelle eines Schaltnetzes erzeugt.
        </par>
        <par>
            Zu beachten ist dabei, dass die zu analysierende Schaltung neben den eingebauten D- und JK-Flipflops nur
            rein kombinatorische Elemente enthalten darf. Wird ein Flipflop z.B. aus Nor-Gattern aufgebaut, wird diese
            Schaltung nicht als Flipflop erkannt und daher auch nicht entsprechend behandelt. In diesem Falle wird
            die Schaltung nicht korrekt analysiert, was bedeutet, das eine nicht korrekte Zustandsfolgetabelle
            erzeugt wird.
        </par>
    </chapter>
    <chapter name="Hardware">
        <subchapter name="GAL16v8 bzw. GAL22v10">
            <par>
                Im Menü der Schaltungserzeugung der Warheitstabelle finden sich auch Funktionen um so gen. JEDEC Dateien
                zu erzeugen. Dabei handelt es sich
                um ein spezielles Dateiformat, welches die Fuse-Map eines PLD beschreibt. Diese JEDEC Datei kann
                mit Hilfe eines speziellen Programmers in ein entsprechendes PLD geschrieben werden, um dieses zu
                konfigurieren.
                Zur Zeit werden Bausteine des Typs <e>GAL16v8</e> und <e>GAL22v10</e> bzw. Fuse-Map-Kompatible
                Bausteine unterstützt.
            </par>
        </subchapter>
        <subchapter name="ATF150xAS">
            <par>
                Die Bausteine der
                <a href="https://www.microchip.com/design-centers/programmable-logic/spld-cpld/cpld-atf15xx-family">
                    <e>ATF150x</e>
                </a>
                Familie sind einfache CPLDs mit bis zu 128 Makrozellen. Diese sind im PLCC Gehäuse verfügbar, was sie
                für Laborversuche gut geeignet erscheinen lässt:
                Sollte ein IC bei Versuchen zerstört werden, kann es einfach ersetzt werden.
                Zudem ist mit dem
                <a href="https://www.microchip.com/design-centers/programmable-logic/spld-cpld/tools/hardware/atdh1150usb">
                    <e>ATDH1150USB</e>
                </a>
                ein einfach zu benutzender, günstiger Programmer erhältlich, mit welchem der Baustein in seiner Schaltung
                (In System) programmiert werden kann. Mit dem
                <a href="https://www.microchip.com/DevelopmentTools/ProductDetails.aspx?PartNO=ATF15XX-DK3-U">
                    <e>ATF15XX-DK3-U</e>
                </a>
                ist zudem ein geeignetes Evaluations-Board verfügbar.
                Für die Programmierung ist die Software
                <a href="https://www.microchip.com/design-centers/programmable-logic/spld-cpld/tools/software/atmisp">
                    <e>ATMISP</e>
                </a>
                erforderlich, welche auf der ATMEL/Microchip Webseite erhältlich ist.
            </par>
            <par>
                Leider sind die Details der Fuse-Map nicht öffentlich zugänglich, so dass kein geeigneter Fitter für
                diesen Baustein in Digital integriert werden kann, wie das bei den <e>GAL16v8</e> und
                <e>GAL22v10</e>
                Bausteinen möglich ist.
            </par>
            <par>
                Daher muss auf einen der von ATMEL bereitgestellten Fitter <e>fit150[x].exe</e> zurückgegriffen werden.
                Diese Programme erzeugen aus einer geeigneten <e>TT2</e> Datei eine <e>JEDEC</e>-Datei welche dann
                in den entsprechenden Chip programmiert werden kann.
                Digital startet den Fitter automatisch wenn eine <e>TT2</e> Datei erzeugt wird. Dazu muss in den
                Digital-Einstellungen der Pfad zu den <e>fit150[x].exe</e> Dateien angegeben werden.
                Es wird zudem eine Projektdatei <e>*.chn</e> erzeugt, welche dann direkt mit
                <a href="https://www.microchip.com/design-centers/programmable-logic/spld-cpld/tools/software/atmisp">
                    <e>ATMISP</e>
                </a>
                geöffnet werden kann, um die <e>JEDEC</e>-Datei zu brennen.
            </par>
            <par>
                Aus rechtlichen Gründen können die Fitter <e>fit150[n].exe</e> nicht mit Digital ausgeliefert werden.
                Diese finden sich jedoch nach der Installation von
                <a href="https://www.microchip.com/design-centers/programmable-logic/spld-cpld/tools/software/wincupl">
                    <e>WinCupl</e>
                </a>
                im Ordner <e>WinCupl\Fitters</e>.
                <a href="https://www.microchip.com/design-centers/programmable-logic/spld-cpld/tools/software/wincupl">
                    <e>WinCupl</e>
                </a>
                wiederum ist auf der ATMEL/Microchip Webseite verfügbar.
                Unter Linux lassen sich die Fitter ebenfalls von Digital starten, wenn <e>wine</e> installiert
                ist.
            </par>
        </subchapter>
        <subchapter name="VHDL">
            <par>
                Eine Schaltung kann zu VHDL exportiert werden. Dabei wird eine Datei erzeugt, welche die komplette
                Beschreibung der Schaltung enthält. Der erzeugte VHDL code wurde mit
                <a href="https://www.xilinx.com/products/design-tools/vivado.html">Xilinx Vivado</a>
                und dem Open Source VHDL Simulator <a href="http://ghdl.free.fr/">ghdl</a> getestet.
            </par>
            <par>
                Wenn eine Schaltung Testfälle enthält, wird anhand der Testdaten eine VHDL-Test-Bench erzeugt.
                Diese kann verwendet werden, um die korrekte Funktion der Schaltung in einer VHDL Simulation zu
                überprüfen.
            </par>
            <par>
                Für spezielle Boards können zusätzliche Dateien erzeugt werden. Zur Zeit wird nur das
                <a href="https://reference.digilentinc.com/reference/programmable-logic/basys-3/start">BASYS3</a>
                Board unterstützt.
                Dabei wird eine Constraints-Datei erzeugt, welche die Zuordnung der Pins beinhaltet. Die Bezeichnung der
                Pins kann dem BASYS3 Datenblatt entnommen werden, und muss als Pinnummer bei den Ein- und Ausgängen
                eingetragen werden.
            </par>
            <par>
                Wenn die Taktfrequenz niedrig ist, wird ein Frequenzteiler in den VHDL Code integriert,
                um den Boardtakt entsprechend zu teilen. Wenn die in der Schaltung gewählte Taktfrequenz über 37kHz
                liegt, wird die MMCM Einheit des Artix-7 zur Takterzeugung verwendet.
                Wenn eine Schaltung zu VHDL exportiert wird, welche auf eine synchrone Taktverteilung angewiesen ist,
                wie das z.B. bei Prozessoren der Fall ist, sollte die Taktfrequenz also auf einen Wert
                größer als 37kHz eingestellt werden.
                Dies stellt sicher, dass die für die Taktverteilung vorgesehenen FPGA-Resourcen auch verwendet werden.
                Der enthaltene Beispiel-Prozessor läuft z.B. mit 20MHz, und wenn auf den Multiplizierer in der ALU
                verzichtet werden kann, sind auch 30MHz möglich.
            </par>
            <par>
                Soll eine Schaltung auf einem BASYS3 Board betrieben werden, kann in Vivado ein neues Projekt angelegt werden.
                Dabei ist die erzeugte VHDL Datei und die Constraints-Datei dem Projekt hinzuzufügen. Wurde das
                Projekt erstellt, kann der Bitstream erzeugt und mit dem Hardware-Manager in ein BASYS3 Board übertragen werden.
            </par>
            <par>
                Um neben der VHDL Datei auch die erforderliche Constraints-Datei erzeugen zu lassen, muss die Schaltung
                ein Textfeld mit dem Text "Board: BASYS3" enthalten.
            </par>
        </subchapter>
    </chapter>
    <chapter name="Häufig gestellte Fragen">
        <faq>
            <question>Wie kann ich eine Leitung verschieben?</question>
            <answer>Mit der Rechteckauswahl einen Endpunkt auswählen und dann mit der Maus verschieben.
                Alternativ kann eine einzelne Leitung mit STRG+Mausklick selektiert werden.
            </answer>
        </faq>
        <faq>
            <question>Wie kann ich eine Leitung löschen?</question>
            <answer>Mit der Rechteckauswahl einen Endpunkt auswählen und dann <e>Entfernen</e> drücken bzw. auf den
                Papierkorb klicken.
                Alternativ kann eine einzelne Leitung mit STRG+Mausklick selektiert werden.
            </answer>
        </faq>
        <faq>
            <question>Wie kann ich ein Element verschieben und dabei alle angeschlossenen Leitungen mitnehmen?
            </question>
            <answer>Das Bauteil mit der Rechteckauswahl auswählen. Die Auswahl muss das Bauteil komplett enthalten.
                Dann kann das Bauteil zusammen mit den Leitungen verschoben werden.
            </answer>
        </faq>
        <faq>
            <question>Ich habe ein Element, das nicht mit einer Leitung verbunden ist, obwohl die Pins auf der Leitung
                liegen.
            </question>
            <answer>Pins werden nur mit einer Leitung verbunden, wenn ein Endpunkt der Leitung auf dem Pin liegt.
            </answer>
        </faq>
        <faq>
            <question>Wenn die Pinnamen einer Schaltung etwas länger sind, sind die Namen nicht mehr zu lesen, wenn
                die Schaltung eingebettet wird. Was kann ich tun?</question>
            <answer>Unter <e>Bearbeiten<arrow/>Schaltungsattribute bearbeiten</e> kann die Breite des Blockes
                vergrößert werden.</answer>
        </faq>
        <faq>
            <question>Die Pins in einer eingebetteten Schaltung haben eine ungünstige Reihenfolge. Wie kann diese
                verändert werden?</question>
            <answer>Unter <e>Bearbeiten<arrow/>Sortieren der Eingänge</e> bzw. <e>Bearbeiten<arrow/>Sortieren der
                Ausgänge</e> kann die Reihenfolge verändert werden.</answer>
        </faq>

        <faq>
            <question>Wenn die Simulation gestartet wird, ist die Leitung grau. Was bedeutet das?</question>
            <answer>Mit Hellgrün und Dunkelgrün wird eine logische 1 bzw. 0 dargestellt. Grau bedeutet, dass die Leitung
                hochohmig ist.
            </answer>
        </faq>
        <faq>
            <question>Ich habe eine Wahrheitstabelle. Wie kann ich daraus die minimalen Schaltfunktionen erzeugen?
            </question>
            <answer>Im Menü
                <e>Analyse<arrow/>Synthese
                </e>
                auswählen und dann die Wahrheitstabelle eingeben.
                In der Statusleiste des Fensters findet sich die Schaltfunktion. Geben mehr als eine abhängige Größe
                ein,
                öffnet sich ein neues Fenster, in welchem alle Schaltfunktionen angegeben sind.
            </answer>
        </faq>
        <faq>
            <question>Ich habe eine Wahrheitstabelle eingegeben, es wird jedoch mehr als eine Schaltfunktion für
                das gesuchte Signal angezeigt. Welche ist die Richtige?
            </question>
            <answer>Wenn eine Schaltfunktion minimiert wird, kann es mehrere minimierte Schaltfunktionen gleicher
                Komplexität geben (gleiche Anzahl von Termen).
                Digital zeigt alle möglichen Lösungen an und alle liefern die selbe Wahrheitstabelle.
                In den Don't Care-Zeilen der Wahrheitstabelle kann es natürlich Unterschiede zwischen den verschiedenen
                Funktionen geben.
            </answer>
        </faq>
        <faq>
            <question>Ich habe eine Wahrheitstabelle. Wie kann ich daraus eine Schaltung erzeugen?</question>
            <answer>Im Menü
                <e>Analyse<arrow/>Synthese
                </e>
                auswählen und dann die Wahrheitstabelle eingeben.
                Unter <e>Neu</e> bzw. mit <e>Spalten hinzufügen</e> können Variablen hinzugefügt werden.
                Im Menü mit
                <e>Erzeugen<arrow/>Schaltung
                </e>
                dann eine Schaltung erzeugen.
            </answer>
        </faq>
        <faq>
            <question>Wie kann ich die Signalnamen in der Wahrheitstabelle verändern?</question>
            <answer>Mit einem Rechtsklick auf den Signalnamen im Tabellenkopf kann der Name bearbeitet werden.</answer>
        </faq>
        <faq>
            <question>Ich habe eine Schaltfunktion. Wie kann ich daraus eine Schaltung erzeugen?</question>
            <answer>Im Menü
                <e>Analyse<arrow/>Ausdruck
                </e>
                auswählen und dann die Funktion eingeben.
            </answer>
        </faq>
        <faq>
            <question>Ich habe eine Schaltfunktion. Wie kann ich daraus eine Wahrheitstabelle erzeugen?</question>
            <answer>Im Menü
                <e>Analyse<arrow/>Ausdruck
                </e>
                auswählen und dann die Funktion eingeben.
                Dann die Schaltung erzeugen und im Menü
                <e>Analyse<arrow/>Analyse
                </e>
                die Wahrheitstabelle erzeugen.
            </answer>
        </faq>
        <faq>
            <question>Wie kann ich aus einer Schaltung eine JEDEC-Datei erzeugen?</question>
            <answer>Im Menü
                <e>Analyse<arrow/>Analyse
                </e>
                auswählen und dann im neuen Fenster im Menü
                <e>Erzeugen<arrow/>Bausteine
                </e>
                den entsprechenden Baustein auswählen.
            </answer>
        </faq>
        <faq>
            <question>Wie kann ich bei der Erzeugung einer JEDEC-Datei die Pinnummern der Signale festlegen?</question>
            <answer>Bei den entsprechenden Eingängen und Ausgängen in der Schaltung kann im Attribute-Dialog
                eine Pinnummer zugewiesen werden.
            </answer>
        </faq>
        <faq>
            <question>Ich habe eine JEDEC Datei erzeugt. Wie bekomme ich diese in ein <e>GAL16v8</e> bzw. <e>
                GAL22v10</e>?
            </question>
            <answer>Für die Programmierung von GAL's ist eine entsprechende Zusatz-Hardware, ein so gen. GAL-Programmer
                erforderlich.
            </answer>
        </faq>
    </chapter>
    <chapter name="Tastenbelegung" newpage="true">
        <shortcuts>
            <shortcut key="Leertaste">Starten und stoppen der Simulation.</shortcut>
            <shortcut key="F7">Run to Break</shortcut>
            <shortcut key="F8">Starten der Testfälle</shortcut>
            <shortcut key="C">Einen Taktschritt ausführen (nur bei gestarteter Simulation und nur, wenn es genau ein
                Taktelement in der Schaltung gibt).
            </shortcut>
            <shortcut key="F9">Analyse der Schaltung</shortcut>
            <shortcut key="STRG-A">Alles auswählen.</shortcut>
            <shortcut key="STRG-X">Ausschneiden der selektierten Elemente und kopieren in die Zwischenablage.</shortcut>
            <shortcut key="STRG-C">Kopieren der selektierten Elemente in die Zwischenablage.</shortcut>
            <shortcut key="STRG-V">Einfügen der Elemente aus der Zwischenablage.</shortcut>
            <shortcut key="STRG-D">Aktuelle Auswahl duplizieren ohne die Zwischenablage zu verändern.</shortcut>
            <shortcut key="R">Beim Einfügen rotieren der Elemente.</shortcut>
            <shortcut key="L">Zuletzt eingefügtes Element noch einmal einfügen.</shortcut>
            <shortcut key="STRG-N">Neue Schaltung.</shortcut>
            <shortcut key="STRG-O">Schaltung öffnen.</shortcut>
            <shortcut key="STRG-S">Speichern der Schaltung.</shortcut>
            <shortcut key="STRG-Z">Letzte Änderung zurücknehmen.</shortcut>
            <shortcut key="STRG-Y">Zurückgenommene Änderung erneut anwenden.</shortcut>
            <shortcut key="P">Programmieren einer Diode oder eines FG-FET.</shortcut>
            <shortcut key="D">Beim Ziehen einer rechteckigen Leitung in den Diagonalmodus wechseln.</shortcut>
            <shortcut key="F">Beim Ziehen einer rechteckigen Leitung die Orientierung wechseln.</shortcut>
            <shortcut key="S">Leitung in zwei Leitungen teilen.</shortcut>
            <shortcut key="ESC">Abbrechen der aktuellen Aktion.</shortcut>
            <shortcut key="Entfernen">Löschen der selektierten Elemente.</shortcut>
            <shortcut key="Rückschritt">Löschen der selektierten Elemente.</shortcut>
            <shortcut key="+">Erhöht die Anzahl der Eingänge in dem Element auf welches die Maus zeigt.</shortcut>
            <shortcut key="-">Erniedrigt die Anzahl der Eingänge in dem Element auf welches die Maus zeigt.</shortcut>
            <shortcut key="STRG +">Vergrößern</shortcut>
            <shortcut key="STRG -">Verkleinern</shortcut>
            <shortcut key="F1">Einpassen</shortcut>
            <shortcut key="F5">Baumansicht der Bauteile ein- oder ausblenden</shortcut>
        </shortcuts>
    </chapter>
</root>
